<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://loudashaoye.github.io/</id>
    <title>HJ.</title>
    <updated>2020-05-28T14:18:39.844Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://loudashaoye.github.io/"/>
    <link rel="self" href="https://loudashaoye.github.io/atom.xml"/>
    <subtitle>&lt;em&gt; 当你对自己不满意的时候，一定要做出改变。&lt;/em&gt;</subtitle>
    <logo>https://loudashaoye.github.io/images/avatar.png</logo>
    <icon>https://loudashaoye.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, HJ.</rights>
    <entry>
        <title type="html"><![CDATA[ZZ-H5-2005_DAY01]]></title>
        <id>https://loudashaoye.github.io/post/zz-h5-2005_day01/</id>
        <link href="https://loudashaoye.github.io/post/zz-h5-2005_day01/">
        </link>
        <updated>2020-05-25T09:51:53.000Z</updated>
        <content type="html"><![CDATA[<h3 id="记录成长点点滴滴h5开班典礼">记录成长点点滴滴—H5开班典礼！！！</h3>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Flex弹性盒模型]]></title>
        <id>https://loudashaoye.github.io/post/flex-dan-xing-he-mo-xing/</id>
        <link href="https://loudashaoye.github.io/post/flex-dan-xing-he-mo-xing/">
        </link>
        <updated>2020-05-05T13:11:26.000Z</updated>
        <content type="html"><![CDATA[<h5 id="一-简要介绍"><strong>一、简要介绍</strong></h5>
<p>    css3最喜欢的新属性之一便是flex布局属性，用六个字概括便是<strong>简单、方便、快速</strong>。<br>
   flex( flexble box：弹性局部盒模型 )，是2009年w3c提出的一种可以简洁、快速弹性布局的属性。<strong>主要思想是给予容器控制内部元素高度和宽度的能力</strong>。目前已得到以下浏览器支持：<br>
<img src="https://loudashaoye.github.io//post-images/1588684994430.png" alt="五大浏览器" loading="lazy"><br>
  其中在webkit内核的浏览器使用时，必须加上**-webkit**前缀，以下不再重复说明。<br>
  下图为flex的相关概念的示意图：<br>
<img src="https://loudashaoye.github.io//post-images/1588764333372.jpg" alt="flex展示模型" loading="lazy"><br>
  使用flex布局的容器(flex container)，它内部的元素自动成为flex项目（flex item）。容器拥有两根隐形的轴，水平的主轴(main axis)，和竖直的交叉轴。主轴开始的位置，既主轴与有边框的交点，称为main start，主轴结束的位置成为main end；交叉轴开始的位置成为cross；交叉轴结束的位置成为corss end。item按主轴或交叉轴排列，item在主轴方向上占据的宽度成为main size，在交叉轴方向上占据的宽度围城corss size。</p>
<h5 id="二-flex弹性盒子基础概念"><strong>二、flex弹性盒子基础概念</strong></h5>
<p>  flex是分为主轴和副轴，默认情况下展示水平方向上一个主轴排列。<br>
  外层盒子容器container设置为 display: flex；使结构展示为弹性盒子。<br>
  默认情况下主轴水平方向上一个排布，如果主轴内容超出就会默认进行折行显示。<br>
   <strong>控制换行属性：</strong> flex-wrap：nowrap;  //默认情况下不换行<br>
           flex-wrap：wrap; //换行<br>
           flex-direction：column; //副轴方向(Y轴)，从上到下进行排列,空间不够进行换行。</p>
<p>   <strong>控制主轴方向上的一个布局属性：</strong> justify-content：flex-start；//默认情况下靠轴开始进行布局<br>
           justify-content：flex-end;//靠轴的后半部分进行布局<br>
           justify-content：center;//主轴水平方向上进行居中显示<br>
           justify-content：space-evenly;//主轴水平方向上两边也有空隙并且中间的空间跟两边一样宽度<br>
           justify-content：space-around; //主轴水平方向上两边也有空隙(空隙是内容宽度的一半),并且中间的空隙剩余空间大小均匀分布<br>
   <strong>控制副轴方向上的一个布局属性：</strong> align-content：flex-start;     //靠副轴的开始进行布局<br>
           align-content：flex-end;      //靠副轴的尾部位置进行布局<br>
           align-content：center;         //靠副轴方向上中心位置进行布局<br>
           align-content：space-evenlu;   //副轴垂直方向上两边也有空隙并且中间的空间跟两边一样宽度的<br>
           align-content：space-around;   //副轴垂直方向上两边也有空隙(空隙是内容宽度的一半),并且中间的空隙剩余空间大小均匀分布</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Markdown_md（Gridea）练习]]></title>
        <id>https://loudashaoye.github.io/post/markdown_mdgridealian-xi/</id>
        <link href="https://loudashaoye.github.io/post/markdown_mdgridealian-xi/">
        </link>
        <updated>2020-03-23T02:25:19.000Z</updated>
        <content type="html"><![CDATA[<h1 id="标题的使用">标题的使用</h1>
<ul>
<li>
<h1 id="这是一级标题">这是一级标题</h1>
</li>
<li>
<h2 id="这是二级标题">这是二级标题</h2>
</li>
<li>
<h3 id="这是三级标题">这是三级标题</h3>
</li>
<li>
<h4 id="这是四级标题">这是四级标题</h4>
</li>
<li>
<h5 id="这是五级标题">这是五级标题</h5>
</li>
<li>
<h6 id="这是六级标题">这是六级标题</h6>
</li>
</ul>
<h1 id="斜体-粗体-粗斜体的使用">斜体、粗体、粗斜体的使用</h1>
<ul>
<li><em>斜体</em></li>
<li><strong>粗体</strong></li>
<li><em><strong>粗斜体</strong></em></li>
</ul>
<h1 id="链接插入的使用方式">链接插入的使用方式</h1>
<ul>
<li><a href="https://www.bilibili.com" title="百度首页">哔哩哔哩动画</a></li>
<li>[哔哩哔哩动画][wangzhi1]</li>
<li><a href="https://www.bilibili.com">https://www.bilibili.com</a></li>
</ul>
<h1 id="图片插入的使用方式">图片插入的使用方式</h1>
<ul>
<li><img src="https://ss0.bdstatic.com/94oJfD_bAAcT8t7mm9GUKT-xh_/timg?image&amp;quality=100&amp;size=b4000_4000&amp;sec=1584931281&amp;di=c626f319a36ca501738731482536b8bb&amp;src=http://a3.att.hudong.com/68/61/300000839764127060614318218_950.jpg" alt="风景图" title="风景图片" loading="lazy"></li>
</ul>
<h1 id="引用">引用</h1>
<blockquote>
<p>这是第一句话</p>
<blockquote>
<p>这是第二句话</p>
<blockquote>
<p>这是第三句话</p>
<blockquote>
<p>这是第四句话</p>
<blockquote>
<p>这是第五句话</p>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
<h1 id="代码块">代码块</h1>
<p><code>html</code><br>
<code>html</code></p>
<ul>
<li>代码区块如下，需要前面连续打四个空格：</li>
<li>
<pre><code>  html、css、javascript
</code></pre>
</li>
</ul>
<pre><code>&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot;&gt;
&lt;head&gt;
    &lt;meta charset=&quot;UTF-8&quot;&gt;
    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;
    &lt;title&gt;Document&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
    
&lt;/body&gt;
&lt;/html&gt;
</code></pre>
<h1 id="分割线">分割线</h1>
<ul>
<li>连续三个*，或者三个-，或者三个_</li>
</ul>
<hr>
<hr>
<hr>
<h1 id="删除线">删除线</h1>
<ul>
<li>删除线使用方式是使用~~左右包括起来（<s>我不想考试</s>）</li>
</ul>
<h1 id="有序列表和无序列表">有序列表和无序列表</h1>
<ul>
<li>这是一级
<ul>
<li>这是二级
<ul>
<li>这是三级</li>
</ul>
</li>
</ul>
</li>
</ul>
<ol>
<li>这是一级<br>
2. 这是二级
<ol>
<li>这是三级</li>
</ol>
</li>
</ol>
<p>#表格</p>
<table>
<thead>
<tr>
<th style="text-align:center">Table</th>
<th style="text-align:center">Are</th>
<th style="text-align:center">Collo</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">1</td>
<td style="text-align:center">2</td>
<td style="text-align:center">3</td>
</tr>
<tr>
<td style="text-align:center">4</td>
<td style="text-align:center">5</td>
<td style="text-align:center">6</td>
</tr>
<tr>
<td style="text-align:center">7</td>
<td style="text-align:center">8</td>
<td style="text-align:center">9</td>
</tr>
</tbody>
</table>
<p>四五六<br>
 四五六</p>
<h1 id="脚注">脚注</h1>
<p>脚注<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></p>
<ul>
<li>脚注 id 必须唯一</li>
<li>无论脚注 id 如何起名，显示时一律标为数字，并且按出现顺序排列</li>
</ul>
<hr class="footnotes-sep">
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p>这里是脚注 <a href="#fnref1" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[前端开发工具vscode插件配置]]></title>
        <id>https://loudashaoye.github.io/post/qian-duan-kai-fa-gong-ju-vscode-cha-jian-pei-zhi/</id>
        <link href="https://loudashaoye.github.io/post/qian-duan-kai-fa-gong-ju-vscode-cha-jian-pei-zhi/">
        </link>
        <updated>2020-02-15T05:38:17.000Z</updated>
        <content type="html"><![CDATA[<p>常用插件推荐：https://www.imooc.com/video/18984</p>
<p>VSCODE颜色主题可以通过上下键进行筛选预览<br>
颜色主题可以在插件中搜索 theme</p>
<p>01、菜单栏中文汉化插件       Chinese (Simplified)<br>
02、文件图标主题                 vscode-icons<br>
03、界面主题                        Atom One Dark Theme<br>
04、html与css关联              CSS Peek<br>
05、代码格式化                    Prettier - Code formatter<br>
06、图标集                             Icon Fonts<br>
07、自动修改标签                 Auto Rename Tag<br>
08、HTML模板                       HTML Boilerplate<br>
09、颜色提示                       Color Info		<br>
10、自动闭合标签                 Auto Close Tag<br>
11、html中css class的只能提示         ;HTML CSS Support	<br>
12、预览插件    open in browser</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[局域网部署]]></title>
        <id>https://loudashaoye.github.io/post/ju-yu-wang/</id>
        <link href="https://loudashaoye.github.io/post/ju-yu-wang/">
        </link>
        <updated>2019-09-05T04:52:30.000Z</updated>
        <content type="html"><![CDATA[<p>部署条件：办公电脑在同一网络环境之下，网络状态设置为家庭网络，创建家庭网络共享局域网，家庭成员假如即可。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Markdown基本语法]]></title>
        <id>https://loudashaoye.github.io/post/markdown-ji-ben-yu-faa/</id>
        <link href="https://loudashaoye.github.io/post/markdown-ji-ben-yu-faa/">
        </link>
        <updated>2019-07-18T04:22:54.000Z</updated>
        <content type="html"><![CDATA[<p><em><strong>Markdown是一种纯文本格式的标记语言。通过简单的标记语法，它可以使普通文本内容具有一定的格式。</strong></em></p>
<p>相比WYSIWYG编辑器<br>
优点：<br>
1、因为是纯文本，所以只要支持Markdown的地方都能获得一样的编辑效果，可以让作者摆脱排版的困扰，专心写作。<br>
2、操作简单。比如:WYSIWYG编辑时标记个标题，先选中内容，再点击导航栏的标题按钮，选择几级标题。要三个步骤。而Markdown只需要在标题内容前加#即可<br>
缺点：<br>
1、需要记一些语法（当然，是很简单。五分钟学会）。<br>
2、有些平台不支持Markdown编辑模式。</p>
<h1 id="一-标题">一、标题</h1>
<p>在想要设置为标题的文字前面加#来表示<br>
一个#是一级标题，二个#是二级标题，以此类推。支持六级标题。<br>
示例：<br>
<img src="https://loudashaoye.github.io//post-images/1563503126297.png" alt="" loading="lazy"></p>
<h1 id="二-字体">二、字体</h1>
<p><strong>加粗</strong><br>
要加粗的文字左右分别用两个*号包起来</p>
<p><em><strong>斜体</strong></em><br>
<em>要倾斜的文字左右分别用一个号包起来</em></p>
<p>斜体加粗<br>
<em><strong>要倾斜和加粗的文字左右分别用三个号包起来</strong></em></p>
<p>删除线<br>
<s>要加删除线的文字左右分别用两个</s>  ~~号包起来</p>
<h1 id="三-引用">三、引用</h1>
<p>在引用的文字前加&gt;即可。引用也可以嵌套，如加两个&gt;&gt;三个&gt;&gt;&gt;<br>
n个...<br>
貌似可以一直加下去，但没神马卵用</p>
<blockquote>
<p>这是引用的内容</p>
<blockquote>
<blockquote>
<p>这是引用的内容</p>
<blockquote>
<blockquote>
<blockquote>
<p>这是引用的内容</p>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
<h1 id="四-分割线">四、分割线</h1>
<p>三个或者三个以上的 - 或者 * 都可以。<br>
示例：<br>
<img src="https://loudashaoye.github.io//post-images/1563508475512.png" alt="" loading="lazy"></p>
<h1 id="五-图片">五、图片</h1>
<p>语法：<br>
<img src="https://loudashaoye.github.io//post-images/1563508558347.png" alt="" loading="lazy"><br>
示例：<br>
<img src="https://loudashaoye.github.io//post-images/1563508566695.png" alt="" loading="lazy"><br>
效果如下：<br>
<img src="https://loudashaoye.github.io//post-images/1563508577580.png" alt="" loading="lazy"><br>
<strong>上传本地图片直接点击导航栏的图片标志，选择图片即可</strong></p>
<h1 id="六-超链接">六、超链接</h1>
<p>语法：<br>
<img src="https://loudashaoye.github.io//post-images/1563508654986.png" alt="" loading="lazy"><br>
示例：<br>
<img src="https://loudashaoye.github.io//post-images/1563508674773.png" alt="" loading="lazy"><br>
如果想要在新页面中打开的话可以用html语言的a标签代替。<br>
<img src="https://loudashaoye.github.io//post-images/1563508710203.png" alt="" loading="lazy"></p>
<h1 id=""></h1>
<h1 id="七-列表">七、列表</h1>
<ul>
<li>
<p>无序列表<br>
语法：<br>
无序列表用 - + * 任何一种都可以<br>
<img src="https://loudashaoye.github.io//post-images/1563508755133.png" alt="" loading="lazy"><br>
<img src="https://loudashaoye.github.io//post-images/1563508769207.png" alt="" loading="lazy"></p>
</li>
<li>
<p>有序列表<br>
语法：<br>
数字加点<br>
<img src="https://loudashaoye.github.io//post-images/1563508802149.png" alt="" loading="lazy"><br>
<img src="https://loudashaoye.github.io//post-images/1563508811813.png" alt="" loading="lazy"></p>
</li>
<li>
<p>列表嵌套<br>
<strong>上一级和下一级之间敲三个空格即可</strong></p>
</li>
<li>
<p>一级无序列表</p>
<ul>
<li>二级无序列表</li>
<li>二级无序列表</li>
<li>二级无序列表</li>
</ul>
</li>
</ul>
<ol>
<li>
<p>一级有序列表</p>
<ol>
<li>二级有序列表</li>
<li>二级有序列表</li>
<li>二级有序列表</li>
</ol>
</li>
</ol>
<h1 id="八-表格">八、表格</h1>
<p>语法：<br>
<img src="https://loudashaoye.github.io//post-images/1563512358372.png" alt="" loading="lazy"><br>
<img src="https://loudashaoye.github.io//post-images/1563512370322.png" alt="" loading="lazy"></p>
<table>
<thead>
<tr>
<th>姓名</th>
<th style="text-align:center">技能</th>
<th style="text-align:right">排行</th>
</tr>
</thead>
<tbody>
<tr>
<td>张飞</td>
<td style="text-align:center">精通java</td>
<td style="text-align:right">1</td>
</tr>
<tr>
<td>刘备</td>
<td style="text-align:center">精通php</td>
<td style="text-align:right">2</td>
</tr>
</tbody>
</table>
<h1 id="九-代码">九、代码</h1>
<p>语法：<br>
单行代码：代码之间分别用一个反引号包起来<br>
<img src="https://loudashaoye.github.io//post-images/1563512833771.png" alt="" loading="lazy"><br>
代码块：代码之间分别用三个反引号包起来，且两边的反引号单独占一行<br>
<img src="https://loudashaoye.github.io//post-images/1563512848957.png" alt="" loading="lazy"><br>
<img src="https://loudashaoye.github.io//post-images/1563512861504.png" alt="" loading="lazy"><br>
示例：</p>
<p>单行代码<br>
<img src="https://loudashaoye.github.io//post-images/1563512872763.png" alt="" loading="lazy"><br>
代码块<br>
<img src="https://loudashaoye.github.io//post-images/1563512882114.png" alt="" loading="lazy"><br>
效果如下：</p>
<p>单行代码</p>
<p>create database hero;</p>
<p>代码块<br>
<img src="https://loudashaoye.github.io//post-images/1563512894960.png" alt="" loading="lazy"></p>
<h1 id="十-流程图">十、流程图</h1>
<figure data-type="image" tabindex="1"><img src="https://loudashaoye.github.io//post-images/1563512906060.png" alt="" loading="lazy"></figure>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[win  PE系统引导设置]]></title>
        <id>https://loudashaoye.github.io/post/win-an-zhuang-xi-tong-bios-yin-dao-she-zhi/</id>
        <link href="https://loudashaoye.github.io/post/win-an-zhuang-xi-tong-bios-yin-dao-she-zhi/">
        </link>
        <updated>2019-07-18T03:59:27.000Z</updated>
        <content type="html"><![CDATA[<p>windows系统安装教程请咨询up<br>
<code>联系qq： 851681631</code></p>
<ul>
<li>注意：<code>闲人勿扰</code>。</li>
</ul>
<p><strong>BOIS引导设置</strong></p>
<pre><code>1、台式机+笔记本USE启动设置
     快捷方式：f1-f12   \   del   自行测试，不懂问up
</code></pre>
<pre><code>2、BIOS学习常用词汇				
	Device                 装置                                 						
	Priority               优先权					
	St Boot Drvice         设置引导装置         						
	Advanced Bios Features 高级基础输入输出系统特性设置					
	First Boot Device      第一启动设备     				
	Hard Disk              硬盘				
	USE FDD                使用者                             				
	Exit                   退出，出口			
	Sava Changes and Exit           保存更改并退出						
	Sava Changes and Exit           保存更改并退出
	Discard Changes and Exit        放弃更改并退出
	Sava Changes and Reset          保存更改并重置
	Discard Changes and Reset       不保存更改并重置
	Reseore Defaults                恢复默认设置
</code></pre>
]]></content>
    </entry>
</feed>